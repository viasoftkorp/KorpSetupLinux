---
- name: Setup main
  hosts: 127.0.0.1
  connection: local
  vars:
    ansible_become_password: "{{ linux_korp.password }}"
  become_user: "{{ linux_korp.user }}"
  become: true

  tasks:
    - name: Execução de playbook
      block:
        - name: Default setup
          ansible.builtin.include_role:
            name: utils
            tasks_from: default/default_setup.yml
          tags:
            - always

        - name: Infrastructure
          ansible.builtin.import_role:
            name: infrastructure
          tags:
            - infrastructure
            - default-setup
            - update
            - install

        - name: Infrastructure-web
          ansible.builtin.import_role:
            name: infrastructure-web
          tags:
            - infrastructure-web
            - default-setup
            - update
            - install

        - name: Infrastructure-desktop
          ansible.builtin.import_role:
            name: infrastructure-desktop
          tags:
            - infrastructure-desktop
            - default-setup
            - update
            - install

        - name: REL01
          ansible.builtin.import_role:
            name: REL01
          tags:
            - REL01
            - default-setup
            - update
            - install

        # task utiliza parâmetros passados por --extra-vars='{"apps":[<app1>,<app2>,...]}'
        - name: Instalação de apps
          ansible.builtin.include_role:
            name: utils
            tasks_from: apps/install.yml
          loop: "{{ apps }}"
          loop_control:
            loop_var: app_name
          tags: 
            - install
            # tag utilizada para facilitar teste do setup, não deve ser utilizada fora de ambiente de teste
            - install-only

        # task executa update para a versão '{{ version_without_build }}', utilizando os APPs em '{{ config_dir_path }}/installed_apps.yml'
        - name: Atualização de apps
          ansible.builtin.include_role:
            name: utils
            tasks_from: apps/update.yml
          tags: 
            - never
            - update
            # tag utilizada para facilitar teste do setup, não deve ser utilizada fora de ambiente de teste
            - update-only

        # Variáveis esperadas:
        #   remove_versioned: bool
        #   remove_unversioned: bool
        #   removed_version: string '2022.1.0'
        #   apps_to_remove: []
        - name: Remoção de apps
          ansible.builtin.include_role:
            name: utils
            tasks_from: apps/remove.yml
          loop: "{{ apps_to_remove }}"
          loop_control:
            loop_var: app_name
          tags:
            - never
            - remove

        # essa deve ser a ultima task
        - name: Finishing
          ansible.builtin.import_role:
            name: finishing
          tags:
            - finishing
            - always

      # bloco só será executado caso ocorra algum erro
      rescue:
        - name: Tratativa de erro
          ansible.builtin.import_role:
            name: finishing
            tasks_from: error
          tags:
            - always
