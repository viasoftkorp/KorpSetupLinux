- name: Update de apps
  block:
    - name: "Definição de ultima versão instalada"
      ansible.builtin.include_role:
        name: utils
        tasks_from: default/get_latest_installed_version

    - name: Definição de lista de serviços
      ansible.builtin.set_fact:
        services_list: "{{ temp_apps_map.unversioned + temp_apps_map.versioned[latest_installed_version] }}"
      when: has_versioned_apps

    - name: Instalação de apps
      ansible.builtin.include_role:
        name: utils
        tasks_from: apps/install.yml
      loop: "{{ (services_list | default(temp_apps_map.unversioned)) | unique }}"
      loop_control:
        loop_var: app_name

    - name: Reinicio de serviços TenantManagement e Administration
      ansible.builtin.command: docker restart "{{ service_to_restart }}"
      become: true
      loop:
      - 'Viasoft.TenantManagement'
      - 'Viasoft.Administration'
      loop_control:
        loop_var: "{{ service_name }}"

    # - name: Reinicio de serviços TenantManagement e Administration
    #   community.docker.docker_container:
    #     name: '{{ service_name }}'
    #     state: started
    #     restart: true
    #     env:
    #       ON_PREMISE_MODE: true
    #       USE_SERVERGC: "{{ use_servergc }}"
    #       URL_CONSUL: http://consul-server:8500
    #       CERT_FILE_PATH: "{{ containers_cert_path }}"
    #     volumes:
    #       - "{{ certs_directory }}/:{{ certs_directory }}/"
    #     networks:
    #       - name: servicos
    #   loop:
    #     - 'Viasoft.TenantManagement'
    #     - 'Viasoft.Administration'
    #   loop_control:
    #     loop_var: "{{ service_name }}"

      

  tags: always

