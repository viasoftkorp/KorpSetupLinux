- name: Remoção de app
  block:
    - name: Checagem de compose - versionado
      ansible.builtin.stat:
        path: "{{ compose_dir_path }}/{{ removed_version }}/{{ app_name }}-compose.yml"
      register: versioned_compose_result

    - name: Checagem de compose - não versionado
      ansible.builtin.stat:
        path: "{{ compose_dir_path }}/{{ app_name }}-compose.yml"
      register: unversioned_compose_result

    - name: Definição de variáveis
      ansible.builtin.set_fact:
        has_versioned_services: "{{ versioned_compose_result.stat.exists }}"
        has_unversioned_services: "{{ unversioned_compose_result.stat.exists }}"
        apps_map: "{{ lookup('file', '{{ config_dir_path }}/installed_apps.yml') | from_yaml }}"

    - name: Remoção de aplicativos do compose - versionado
      community.docker.docker_compose:
        state: absent
        project_src: "{{ compose_dir_path }}/{{ removed_version }}"
        files:
          - "{{ app_name }}-compose.yml"
      when: remove_versioned and has_versioned_services

    - name: "Remoção de {{ app_name }} do registro de apps"
      ansible.builtin.set_fact:
        apps_map: "{{ apps_map | combine(
          {
            'versioned': {
              removed_version: apps_map.versioned[removed_version] | reject('equalto', app_name)
            }
          },
          recursive=True, list_merge='replace') }}"
      when: remove_versioned and has_versioned_services

    - name: Remoção de aplicativos do compose - não versionado
      community.docker.docker_compose:
        state: absent
        project_src: "{{ compose_dir_path }}/"
        files:
          - "{{ app_name }}-compose.yml"
      when: remove_unversioned and has_unversioned_services

    - name: "Remoção de {{ app_name }} do registro de apps"
      ansible.builtin.set_fact:
        apps_map: "{{ apps_map | combine(
          {
            'unversioned': apps_map.unversioned | reject('equalto', app_name)
          },
          recursive=True, list_merge='replace') }}"
      when: remove_unversioned and has_unversioned_services

    - name: "Escrita de arquivo {{ config_dir_path }}/installed_apps.yml"
      ansible.builtin.copy:
        dest: "{{ config_dir_path }}/installed_apps.yml"
        mode: '0644'
        content: "{{ apps_map | to_yaml }}"

  # tags 'always' é necessário aqui pois usamos 'include_role'
  tags: always
