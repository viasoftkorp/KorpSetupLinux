- name: Setup de variáveis
  block:
    - name: Validação de variáveis
      ansible.builtin.fail:
        msg: Uma ou mais variáveis padrões não forma definidas.
      when: (token | length == 0) or (gateway_url | length == 0)

    - name: Validação de token
      ansible.builtin.uri:
        url: "{{ gateway_url }}/TenantManagement/server-deploy/token/{{ token }}"
        return_content: true
      register: response

    - name: Validação de tenant_id
      ansible.builtin.fail:
        msg: "mensagem de erro: O Tenant Utilizado é diferente do Tenant salvo no ambiente."
      when: not (hostvars[inventory_hostname].tenant_id == response.json['tenantId'])
    
    - name: Configuração de tenant_id
      ansible.builtin.set_fact:
        tenant_id: "{{ response.json.tenantId }}"
        version_without_build: "{{ response.json.version }}"

    - name: Coleta de secrets
      ansible.builtin.uri:
        url: "{{ gateway_url }}/vault/manager/server-deploy/secrets/{{ token }}"
        return_content: true
      register: response

    - name: Definição de secrets
      ansible.builtin.set_fact:
        services_secrets: "{{ response.json }}"

    - name: Definição de containers_cert_path para custom
      ansible.builtin.set_fact:
        containers_cert_path: "{{ cert_crt_path }}"
      when: certs.custom.certificate

    - name: Definição de containers_cert_path para self_signed
      ansible.builtin.set_fact:
        containers_cert_path: "{{ self_signed_ca_cert_path }}"
      when: certs.self_signed.certificate

    - name: Definição de containers_cert_path para certbot_automated
      ansible.builtin.set_fact:
        containers_cert_path: "{{ certs_directory }}/letsencrypt/live/{{ certbot_cert_name }}/fullchain.pem"
        cert_privatekey_path: "{{ certs_directory }}/letsencrypt/live/{{ certbot_cert_name }}/privkey.pem"
        cert_crt_path: "{{ certs_directory }}/letsencrypt/live/{{ certbot_cert_name }}/fullchain.pem"
      when: certs.certbot_automated.certificate

    - name: Configuração de variáveis personalizadas
      block:
        - name: Definição de variáveis
          ansible.builtin.set_fact:
            docker_account: "{{ services_secrets.Others.Docker.Account }}"
            docker_image_suffix: "{{ services_secrets.Others.Docker.ImageSuffix }}"
            frontend: "{{ frontend | combine(
              {
                'dns': {
                  'api': services_secrets.Others.DNSs.api,
                  'frontend': services_secrets.Others.DNSs.frontend,
                  'cdn': services_secrets.Others.DNSs.cdn
                }
              }, recursive=True) }}"

        - name: "Definição de variáveis 'frontend.endpoints'"
          ansible.builtin.set_fact:
            frontend: "{{ frontend | combine(
              {
                'endpoints': {
                  'gateway_url': 'https://' + dns.api,
                  'cdn_url': 'https://' + dns.cdn,
                  'frontend_url': 'https://' + dns.frontend
                }
              }, recursive=True) }}"

        - name: "Adição de 'https_port' à 'frontend.endpoints'"
          ansible.builtin.set_fact:
            frontend: "{{ frontend | combine(
              {
                'endpoints': {
                  'gateway_url': frontend.endpoints.gateway_url + ':' + https_port, 
                  'cdn_url': frontend.endpoints.cdn_url + ':' + https_port, 
                  'frontend_url': frontend.endpoints.frontend_url + ':' + https_port 
                }
              }, recursive=True) }}"
          when: https_port != "443"

        - name: Definição de variável docker_account
          ansible.builtin.set_fact:
            docker_account: "{{ customs.docker_account }}"
          when: not (customs.docker_account | length == 0)

        - name: Definição de variável docker_image_suffix
          ansible.builtin.set_fact:
            docker_image_suffix: "{{ customs.docker_image_suffix }}"
          when: not (customs.docker_image_suffix | length == 0)

        - name: Adição de separador do sufixo docker_image_suffix
          ansible.builtin.set_fact:
            docker_image_suffix: "-{{ docker_image_suffix }}"
          when: not (docker_image_suffix | length == 0)

        # authentication_db_name == "Viasoft_Authentication" serve para definir o sufixo de Authentication apenas
        # uma vez, já que essa task é executada mais de uma vez ao decorrer do setup
        - name: Definição de variável authentication_db_name
          ansible.builtin.set_fact:
            authentication_db_name: "{{ authentication_db_name }}{{ db_suffix_divider }}{{ db_suffix }}"
          when: not (db_suffix | length == 0)  and authentication_db_name == "Viasoft_Authentication"

  # tags 'always' é necessário aqui pois usamos 'include_role'
  tags: always
