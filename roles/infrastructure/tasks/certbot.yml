# Certbot armazena logs em: /var/log/letsencrypt/letsencrypt.log
# Documentação do Certbot: https://eff-certbot.readthedocs.io/en/stable/using.html

# Logs:         /etc/korp/certs/logs/letsencrypt.log
# Certificados: /etc/korp/certs/letsencrypt/live/portal-local.korp.com.br/

# Informações sobre o certificado: sudo certbot certificates --config-dir /etc/korp/certs/letsencrypt/
# Revocar certificado: sudo certbot revoke --cert-name portal-local.korp.com.br --config-dir /etc/korp/certs/letsencrypt/

# chave privada (private key) deve ser do tipo 'rsa' por causa do Viasoft.Authentication
# diretórios usados pelo certbot são customizados devido á permissões (logs-dir, config-dir, work-dir)
# 'cert-name' é o nome que o certbot irá utilizar para se resolver, não tem nenhum efeito no certificado em sí
# o challenge utilizado para validar o certificado é o 'http-01'
- name: Criação de certificado pelo Certbot 
  ansible.builtin.command:
    cmd: >
      certbot certonly 
      --webroot
      --webroot-path {{ config_dir_path }}/nginx/letsencrypt
      --logs-dir {{ certs_directory }}/logs
      --config-dir  {{ certs_directory }}/letsencrypt
      --work-dir {{ certs_directory }}/letsencrypt/lib
      --email {{ certs.certbot_automated.email }}
      --deploy-hook {{ korp_dir_path }}/scripts/certs_reload.sh
      --cert-name {{ certbot_cert_name }}
      -d {{ dns.api }} -d {{ dns.cdn }} -d {{ dns.frontend }}
      --agree-tos
      --noninteractive
      --key-type rsa

- name: Remoção de cronjob padrão de certbot
  ansible.builtin.file:
    path: /etc/cron.d/certbot
    state: absent

- name: Geração de PFX do certificado
  community.crypto.openssl_pkcs12:
    action: export
    path: "{{ cert_pfx_path }}"
    passphrase: "{{ certs.pfx_passphrase }}"
    certificate_path: "{{ cert_crt_path }}"
    privatekey_path: "{{ cert_privatekey_path }}"
    friendly_name: portal-local.korp.com.br
    backup: true
  register: pfx_status

- name: Configuração e transferência de arquivos de nginx
  ansible.builtin.template:
    dest: "{{ config_dir_path }}/nginx/conf.d/{{ item }}"
    src: "configs/nginx/conf.d/{{ item }}.j2"
    owner: "{{ linux_korp.user }}"
    group: root
    mode: '0644'
  loop:
    - "korp.conf"
    - "korp-api.conf"
    - "korp-cdn.conf"
    - "korp.locations"
    - "korp-api.locations"
    - "korp-cdn.locations"
  register: nginx_files_status

- name: Reload de nginx
  community.docker.docker_container_exec:
    container: nginx
    command: bash -c "/usr/sbin/nginx -s reload"
  when: nginx_files_status.changed
