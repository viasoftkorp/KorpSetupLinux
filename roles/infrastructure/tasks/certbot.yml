# Certbot armazena logs em: /var/log/letsencrypt/letsencrypt.log
# Documentação do Certbot: https://eff-certbot.readthedocs.io/en/stable/using.html


- name: Criação de diretório de letsencrypt
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ linux_korp.user }}"
    group: root
  loop:
    - "{{ certs_directory }}/letsencrypt/logs"
    - "{{ certs_directory }}/letsencrypt/lib"
    - "{{ config_dir_path }}/nginx/letsencrypt"

- name: Criação de certificado pelo Certbot 
  ansible.builtin.command:
    cmd: >
      certbot certonly 
      --webroot
      --webroot-path {{ config_dir_path }}/nginx/letsencrypt
      --logs-dir {{ certs_directory }}/letsencrypt/logs
      --config-dir  {{ certs_directory }}/letsencrypt
      --work-dir {{ certs_directory }}/letsencrypt/lib
      --email {{ certs.certbot_automated.email }}
      --deploy-hook /etc/korp/scripts/nginx_reload.sh
      --cert-name portal-local.korp.com.br 
      -d {{ dns.api }} -d {{ dns.cdn }} -d {{ dns.frontend }}
      --agree-tos 
      --noninteractive
      --staging
    # TODO remover --staging

- name:
  ansible.builtin.pause:
    msg: aaaaaaaaaaaa
# TODO verificar que cronjob padrão do certbot está funcionando

# TODO testar envio de email

- name: Configuração e transferência de arquivos de nginx
  ansible.builtin.template:
    dest: "{{ config_dir_path }}/nginx/conf.d/{{ item }}"
    src: "configs/nginx/conf.d/{{ item }}.j2"
    owner: "{{ linux_korp.user }}"
    group: root
    mode: '0644'
  loop:
    - "korp.conf"
    - "korp-api.conf"
    - "korp-cdn.conf"
  register: nginx_files_status

- name: Reload de nginx
  community.docker.docker_container_exec:
    container: nginx
    command: bash -c "/usr/sbin/nginx -s reload"
  when: nginx_files_status.changed
