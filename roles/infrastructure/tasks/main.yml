- name: validação de token
  ansible.builtin.uri:
    url: "{{ gateway_url }}/TenantManagement/server-deploy/token/{{ token }}"
    return_content: true
  register: response

- name: configuração de tenant_id
  ansible.builtin.set_fact:
    tenant_id: "{{ response.json.tenantId }}"

- name: instalação de dependências padrões
  ansible.builtin.pip:
    name: "{{ item }}"
  loop:
    # Bibliotecas usadas pelo Ansible para usar o Consul
    - python-consul
    - requests
    # Bibliotecas usadas pelo Ansible para rodar querys no SQL Server
    - pymssql

- name: provisão de certificado auto-assinado
  ansible.builtin.import_tasks: self_signed_certificate.yml

- name: configuração de arquivos e pastas
  ansible.builtin.import_tasks: files_and_folders_setup.yml

- name: criação de usuário de uso da korp no SQL Server
  community.general.mssql_script:
    login_user: "{{ mssql.default_user }}"
    login_password: "{{ mssql.default_password }}"
    login_host: "{{ mssql.address }}"
    name: master
    script: "{{ lookup('template', 'sql/create_user.j2') | string }}"

- name: criação e inicialização de default-compose
  community.docker.docker_compose:
    project_src: "{{ korp_dir_path }}/composes/"
    files:
      - infrastructure-default-compose.yml

- name: criação e configuração de usuário no rabbitmq
  ansible.builtin.import_tasks: rabbitmq_user.yml

- name: criação de usuário de uso da korp no Postgres
  community.postgresql.postgresql_user:
    db: postgres
    login_host: "{{ postgres.address }}"
    name: "{{ postgres.korp_user }}"
    password: "{{ postgres.korp_password }}"
    login_user: "{{ postgres.default_user }}"
    login_password: "{{ postgres.default_password }}"
    role_attr_flags: LOGIN,SUPERUSER,CREATEDB,CREATEROLE,INHERIT,REPLICATION

# itera sobre os serviços mapeados em "group_vars/all" e cria os dbs com base nas informações colocadas em na prop "db"
- name: criação de bancos de dados
  ansible.builtin.include_role:
    name: utils
    tasks_from: "create_db/{{ item.db.db_type }}"
  vars:
    db_name: "{{ item.db.db_name }}"
  loop: "{{ services }}"

- name: adição de kv Global ao consul
  community.general.consul_kv:
    # parâmetro 'cas: "0"' faz com que KV não seja alterado caso já exista
    cas: "0"
    key: Global
    value: "{{ lookup('template', 'consul_kv/global.json.j2') | to_nice_json }}"

- name: adição de config de fabio ao consul
  community.general.consul_kv:
    key: fabio/config
    value: "{{ lookup('file', 'configs/fabio/config') }}"

- name: adição de serviços
  ansible.builtin.include_role:
    name: utils
    tasks_from: services/add_service_without_client
  vars:
    service_name: "{{ item }}"
    consul_kv: "{{ lookup('template', 'consul_kv/{{ item | lower }}.json.j2') }}"
  loop:
    - Viasoft.Authentication

- name: criação e inicialização de korp-compose
  community.docker.docker_compose:
    project_src: "{{ korp_dir_path }}/composes/"
    files:
      - infrastructure-korp-compose.yml
