- name: instalação de dependências padrões
  ansible.builtin.pip:
    name: "{{ item }}"
  loop:
    # Bibliotecas usadas pelo Ansible para usar o Consul
    - python-consul
    - requests
    # Bibliotecas usadas pelo Ansible para rodar querys no SQL Server
    - pymssql

# copia arquivos presentes em 'files/configs/'.
# aqui não é necessário a lógica de criação de diretório, pois estamos copiando pastas, e não arquivos.
- name: transferência de arquivos de configuração
  ansible.builtin.copy:
    dest: "{{ korp_dir_path }}/configs/"
    src: configs/
    owner: "{{ linux_korp.user }}"
    group: root
    mode: '0644'

# como estamos usando 'template' para configurar os arquivos de compose, o diretório "{{ korp_dir_path }}/composes/"" deve existir.
# essas duas tasks asseguram que o diretório será criado se necessário.
- name: verificação de diretório de composes
  stat:
    path: "{{ korp_dir_path }}/composes/"
  register: korp_compose_folder

- name: criação de diretório de composes
  file:
    path: "{{ korp_dir_path }}/composes/"
    state: directory
    mode: '0755'
    owner: "{{ linux_korp.user }}"
    group: root
  when: korp_compose_folder.stat.exists

# itera sobre todos os aquivos "*.yml.j2" presentes em 'templates/composes', substituindo as variáveis presentes.
# o diretório de transferência deve existir, por isso as duas tasks a cima são necessárias.
- name: configuração e transferência de arquivos de compose
  ansible.builtin.template:
    dest: "{{ korp_dir_path }}/composes/{{ item[:-3] | basename }}"
    src: "composes/{{ item | basename }}"
    owner: "{{ linux_korp.user }}"
    group: root
    mode: '0644'
  loop:
    "{{ lookup('fileglob', 'templates/composes/*', wantlist=True) | select('search','.yml.j2') }}"

- name: criação e inicialização de composes
  community.docker.docker_compose:
    project_src: "{{ korp_dir_path }}/composes/"
    files:
      - infrastructure-default-compose.yml
      - infrastructure-korp-compose.yml

- name: adição de kv Global ao consul
  community.general.consul_kv:
    # parâmetro 'cas: "0"' faz com que KV não seja alterado caso já exista
    cas: "0"
    key: Global
    value: "{{ lookup('file', 'files/consul_kv/global.json') | string }}"
