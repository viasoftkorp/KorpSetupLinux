{
  "Serilog": {
    "Using": [
      "Serilog.Expressions"
    ],
    "RequestLog": {
      "OverrideDefault": true,
      "MessageTemplate": ""
    },
    "MinimumLevel": {
      "Default": "Warning",
      "Override": {
        "Microsoft.AspNetCore": "Warning",
        "Microsoft.EntityFrameworkCore": "Warning",
        "Rebus": "Warning",
        "Hangfire": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Console"
      }
    ],
    "Filter": [
      {
        "Name": "ByExcluding",
        "Args": {
          "expression": "RequestPath like '/health'"
        }
      }
    ],
    "Enrich": [
      "FromLogContext"
    ]
  },
  {% if enable_sentry_relay %}
  "FrontendSentry": {
    "DsnUrl": "https://{{ services_secrets.Others.SentryRelay.Projects.WebFrontend.PublicKey }}@{{ frontend.endpoints.gateway_url }}/{{ services_secrets.Others.SentryRelay.RouteStrip }}/{{ services_secrets.Others.SentryRelay.Projects.WebFrontend.Id }}",
    "IsEnabled": true,
    "Mutation": {
      "MutationBreadcrumbLimit": 1000,
      "MutationLimit": 15000
    },
    "Replay": {
      "BlockAllMedia": false,
      "IsEnabled": true,
      "MaskAllInputs": false,
      "MaskAllText": false,
      "ReplaysOnErrorSampleRate": 1.0,
      "ReplaysSessionSampleRate": 0
    },
    "ShowDialog": false,
    "Tracing": {
      "TracesSampleRate": 0.1
    }
  },
  {% else %}
  "FrontendSentry": {
    "IsEnabled": false
  },
  {% endif %}
  "AppRiseUrl": "http://{{ apprise_container_name }}:8000",
  "Provisioning": {
    "EnableSchemaProvisioning": "true"
  },
  "Sentry": {
    "ShouldIgnoreAmbientDataExceptions": true,
    "CanInitSentry": "false",
    "Dsn": ""
  },
  "MinioConfig": {
    "EndPoint": "minio-server:9000",
    "AccessKeyID": "{{ minio.access_key }}",
    "SecretAccessKey": "{{ minio.secret_key }}",
    "useSSL": false
  },
  "MinioConfigNew": {
    "EndPoint": "minio-server-new:9000",
    "AccessKeyID": "{{ minio_new.access_key }}",
    "SecretAccessKey": "{{ minio_new.secret_key }}",
    "useSSL": false
  },
  "MinioConfigGateway": {
    "EndPoint": "{{ services_secrets.Global.MinioConfigGateway.EndPoint }}",
    "AccessKeyID": "{{ minio_gateway_config.AccessKey }}",
    "SecretAccessKey": "{{ minio_gateway_config.SecretKey }}",
    "useSSL": {{ services_secrets.Global.MinioConfigGateway.useSSL }}
  },
  "OnPremiseLicensedTenants": "{{ tenant_id }}",
  "HostTenantId": "16a7571e-7ff6-479e-a6f5-3514414179dc",
  "SqlIdleConnections": "10",
  "SqlTimeKillConnectionInMin": "3",
  "DatabaseLogLevel": "Error",
  "OnPremiseMode": true,
  "RuntimeEnvironment": "development",
  "SecretManager": {
    "Path": "/app/SecretManager/",
    "RefreshRolesFrequencySeconds": "300"
  },
  "ApiWebKey": "{{ services_secrets.Global.ApiWebKey }}",
  "GatewayFrontendUrl": "{{ services_secrets.Global.GatewayFrontendUrl}}",
  "GatewayUrl": "{{ gateway_url }}",
  "LegacyGateway": "{{ frontend.endpoints.gateway_url }}",
  "CORS": "{{ frontend.endpoints.frontend_url }}",
  "FrontendUrl": "{{ frontend.endpoints.frontend_url }}",
  "Authentication": {
    "Authority": "{{ frontend.endpoints.gateway_url }}/oauth",
    "IntrospectionSecret": "{{ general.introspection_secret }}",
    "GatewayAuthority": "{{ gateway_url }}/oauth"
  },
  "IntervaloHealthCheckSegs": "60",
  "RemoverServicoAposFalhaSegs": "60",
  "ServiceBus": {
    "Transport": {
      "Adapter": "rabbitmq",
      "Hostname": "amqp://{{ rabbitmq.korp_user }}:{{ rabbitmq.korp_password }}@{{ rabbitmq_container_name }}"
    }
  },
  "Caching": {
    "Endpoints": "{{ redis_container_name }}:6379",
    "Password": "{{ redis.password }}"
  },
  "KorpRegisterApiKey": "{{ services_secrets.Global.KorpRegisterApiKey }}",
  "CdnUrl": "{{ frontend.endpoints.cdn_url }}",
  "GatewayCdnUrl": "{{ services_secrets.Global.GatewayCdnUrl }}"
}
