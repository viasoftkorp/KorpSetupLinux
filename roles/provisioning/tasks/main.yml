- name: Limpeza de cache do repositório
  ansible.builtin.command: apt-get clean
  become: true

- name: Atualização de cache do repositório
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
    force_apt_get: true

- name: Verificação da versão do sistema operacional
  ansible.builtin.fail:
    msg: A versão do ubuntu deve ser 22.04
  when: ansible_distribution_version != "22.04"

- name: Instalação de dependências padrões
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - python3
    - python3-pip
    # necessário para o funcionamento de become_user
    - acl
    # necessário para o funcionamento de postgresql
    - libpq-dev

- name: Instalação de dependências padrões usando pip
  ansible.builtin.pip:
    name: "{{ item }}"
  loop:
    # Bibliotecas usadas pelo Ansible para usar o Postgres
    - psycopg2
    - cryptography>=3.0

- name: Requisição de informações padrões
  ansible.builtin.include_role:
    name: utils
    tasks_from: default/variables_setup.yml

- name: Configuração de sysctl.conf
  ansible.posix.sysctl:
    name: fs.inotify.max_user_instances
    value: '524288'
    state: present
    reload: true

- name: Criação de usuário de uso da korp no Linux
  ansible.builtin.user:
    name: "{{ linux_korp.user }}"
    password: "{{ linux_korp.password | password_hash('sha512') }}"
    comment: Korp User
    group: root
    groups:
      - sudo
      - www-data
    state: present
    system: true
    create_home: true
    shell: /bin/bash

- name: "Mudança de dono de {{ korp_dir_path }}"
  ansible.builtin.file:
    path: "{{ korp_dir_path }}"
    owner: "{{ linux_korp.user }}"
    group: root

- name: Alteração de timezone
  community.general.timezone:
    name: Greenwich

- name: Configuração de hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "127.0.0.1 {{ dns.frontend }} {{ dns.api }} {{ dns.cdn }}"
    owner: root
    group: root
    mode: '0644'

- name: Setup do salt-minion
  import_tasks: salt_minion_setup.yml

- name: Setup de zabbix-agent2
  import_tasks: zabbix_setup.yml

- name: Setup do Docker
  import_tasks: docker_setup.yml

# volume de apprise é criado separadamente pois seu owner é diferente
- name: "Verificação de {{ dados_docker_dir_path }}/apprise"
  ansible.builtin.stat:
    path: "{{ dados_docker_dir_path }}/apprise"
  register: korp_volume_folder

- name: "Criação de diretório {{ dados_docker_dir_path }}/apprise"
  ansible.builtin.file:
    path: "{{ dados_docker_dir_path }}/apprise"
    state: directory
    mode: '0770'
    owner: www-data
    group: www-data

- name: Garantia de existência de diretórios
  ansible.builtin.file:
    path: "{{ item }}/"
    state: directory
    mode: '0755'
    owner: "{{ linux_korp.user }}"
    group: root
  loop:
    - "{{ config_dir_path }}"
    - "{{ certs_directory }}"

# essa task deve ser feita aqui pois precisamos do usuário root para alterar o owner dos arquivos
- name: Correção de permissão de arquivos de certificado
  ansible.builtin.file:
    path: "{{ certs_directory }}/{{ item.name }}"
    owner: "{{ linux_korp.user }}"
    group: root
    mode: "{{ item.mode }}"
  when: certs.custom.certificate and (item.name != "cert.pass" or certs.custom.has_pass_file)
  loop:
    - name: "cert.crt"
      mode: "644"
    - name: "cert.key"
      mode: "600"
    - name: "cert.pass"
      mode: "744"

# essa task deve ser feita aqui pois precisamos do usuário root para alterar o owner dos arquivos
- name: "Correção de permissão de {{ certs_directory}}"
  ansible.builtin.file:
    path: "{{ certs_directory}}"
    owner: "{{ linux_korp.user }}"
  when: certs.custom.certificate

# essas task precisam ser feitas nessa role pois precisamos estar logados com root
- name: Instalação de certbot
  block:
    # Documentação do certbot recomenda instalação de certbot com snap
    - name: Instalação de certbot com snap 
      community.general.snap:
        classic: true
        name:
          - certbot

    - name: Cria de symlink para certbot
      ansible.builtin.file:
        src: /snap/bin/certbot
        dest: /usr/bin/certbot
        state: link

    - name: Criação de diretórios de letsencrypt
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: "{{ linux_korp.user }}"
        group: root
      loop:
        - "{{ certs_directory }}/letsencrypt/logs"
        - "{{ certs_directory }}/letsencrypt/lib"
        - "{{ config_dir_path }}/nginx/letsencrypt"

  when: certs.certbot_automated.certificate
