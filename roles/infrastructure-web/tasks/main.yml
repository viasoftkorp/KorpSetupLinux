- name: Configuração e transferência de arquivos de compose de infrastructure-web
  ansible.builtin.template:
    dest: "{{ korp_dir_path }}/composes/{{ item[:-3] | basename }}"
    src: "composes/{{ item | basename }}"
    owner: "{{ linux_korp.user }}"
    group: root
    mode: '0644'
  loop:
    "{{ lookup('fileglob', 'templates/composes/*', wantlist=True) | select('search', '.yml.j2') }}"

- name: Definição de variáveis
  ansible.builtin.set_fact:
    services: "{{ (lookup('file', 'vars/main.yml') | from_yaml)['services'] }}"

# precisa estar antes do Viasoft.Authentication, pois o mesmo cria os clients a partir do Consul
- name: Adição de serviços de infrastructure-web - sem oauth
  ansible.builtin.include_role:
    name: utils
    tasks_from: services/add_service
  vars:
    service_name: "{{ item.key }}"
    id: infrastructure-web
    skip_compose: true
    skip_app_register: true
  with_dict: "{{ services }}"
  loop_control:
    extended: true

- name: Setup Viasoft.Authentication
  ansible.builtin.import_tasks: authentication.yml

# esses serviços devem ser adicionados depois do setup do Viasoft.Authentication
- name: Definição de variáveis
  ansible.builtin.set_fact:
    services: "{{ (lookup('file', 'vars/services_with_oauth.yml') | from_yaml)['services'] }}"

- name: Adição de serviços de infrastructure-web - com oauth
  ansible.builtin.include_role:
    name: utils
    tasks_from: services/add_service
  vars:
    service_name: "{{ item.key }}"
    id: infrastructure-web
    skip_compose: true
    skip_app_register: true
  with_dict: "{{ services }}"
  loop_control:
    extended: true

- name: Criação e inicialização de compose de infraestrutura WEB
  community.docker.docker_compose:
    project_src: "{{ korp_dir_path }}/composes/"
    env_file: "{{ docker_env_file_path }}"
    files:
      - infrastructure-web-compose.yml
